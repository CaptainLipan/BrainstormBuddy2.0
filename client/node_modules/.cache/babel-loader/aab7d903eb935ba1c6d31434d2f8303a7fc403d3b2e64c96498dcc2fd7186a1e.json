{"ast":null,"code":"import { toggleVote } from '../../../api/api';\nexport const handleVote = async (postId, userId, posts, setPosts, type) => {\n  try {\n    const response = await toggleVote('post', postId, type, userId);\n    if (response.data.success) {\n      setPosts(posts.map(post => {\n        var _response$data$netVot;\n        return post._id === postId ? {\n          ...post,\n          upvotes: (_response$data$netVot = response.data.netVotes) !== null && _response$data$netVot !== void 0 ? _response$data$netVot : post.upvotes,\n          upvoted: type === 'upvote',\n          downvoted: type === 'downvote'\n        } : post;\n      }));\n    } else {\n      alert(response.data.message);\n    }\n  } catch (error) {\n    alert(\"Failed to execute vote operation: \" + error.message);\n  }\n};","map":{"version":3,"names":["toggleVote","handleVote","postId","userId","posts","setPosts","type","response","data","success","map","post","_response$data$netVot","_id","upvotes","netVotes","upvoted","downvoted","alert","message","error"],"sources":["/Users/honzik/WebstormProjects/untitled7/client/src/components/mainbar/posts/handleVote.ts"],"sourcesContent":["import { toggleVote } from '../../../api/api';\nimport { Post } from '../../../models/post/PostModel';\n\nexport const handleVote = async (\n    postId: string,\n    userId: string,\n    posts: Post[],\n    setPosts: React.Dispatch<React.SetStateAction<Post[]>>,\n    type: 'upvote' | 'downvote'\n): Promise<void> => {\n    try {\n        const response = await toggleVote('post', postId, type, userId);\n\n        if (response.data.success) {\n            setPosts(posts.map(post =>\n                post._id === postId\n                    ? {\n                        ...post,\n                        upvotes: response.data.netVotes ?? post.upvotes,\n                        upvoted: type === 'upvote',\n                        downvoted: type === 'downvote'\n                    }\n                    : post\n            ));\n        } else {\n            alert(response.data.message);\n        }\n    } catch (error: any) {\n        alert(\"Failed to execute vote operation: \" + error.message);\n    }\n};\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,kBAAkB;AAG7C,OAAO,MAAMC,UAAU,GAAG,MAAAA,CACtBC,MAAc,EACdC,MAAc,EACdC,KAAa,EACbC,QAAsD,EACtDC,IAA2B,KACX;EAChB,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMP,UAAU,CAAC,MAAM,EAAEE,MAAM,EAAEI,IAAI,EAAEH,MAAM,CAAC;IAE/D,IAAII,QAAQ,CAACC,IAAI,CAACC,OAAO,EAAE;MACvBJ,QAAQ,CAACD,KAAK,CAACM,GAAG,CAACC,IAAI;QAAA,IAAAC,qBAAA;QAAA,OACnBD,IAAI,CAACE,GAAG,KAAKX,MAAM,GACb;UACE,GAAGS,IAAI;UACPG,OAAO,GAAAF,qBAAA,GAAEL,QAAQ,CAACC,IAAI,CAACO,QAAQ,cAAAH,qBAAA,cAAAA,qBAAA,GAAID,IAAI,CAACG,OAAO;UAC/CE,OAAO,EAAEV,IAAI,KAAK,QAAQ;UAC1BW,SAAS,EAAEX,IAAI,KAAK;QACxB,CAAC,GACCK,IAAI;MAAA,CACd,CAAC,CAAC;IACN,CAAC,MAAM;MACHO,KAAK,CAACX,QAAQ,CAACC,IAAI,CAACW,OAAO,CAAC;IAChC;EACJ,CAAC,CAAC,OAAOC,KAAU,EAAE;IACjBF,KAAK,CAAC,oCAAoC,GAAGE,KAAK,CAACD,OAAO,CAAC;EAC/D;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}