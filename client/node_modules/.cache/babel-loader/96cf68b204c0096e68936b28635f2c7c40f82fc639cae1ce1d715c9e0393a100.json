{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:4000/api'; // Adjust if your base URL differs\n\n// Function to fetch all posts\nexport const fetchPosts = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/posts`);\n    return response.data.data; // Accessing the 'data' property from the response\n  } catch (error) {\n    console.error(\"Failed to fetch posts:\", error);\n    throw error; // Rethrow to handle it where the function is called\n  }\n};\n\n// Function to fetch the vote count for a specific post\nexport const fetchPostVotes = async postId => {\n  try {\n    const response = await axios.get(`${API_URL}/post/${postId}/votes`);\n    return response.data; // Assuming the backend sends the vote count in a straightforward format\n  } catch (error) {\n    console.error(`Failed to fetch votes for post ${postId}:`, error);\n    throw error; // Rethrow to handle it where the function is called\n  }\n};","map":{"version":3,"names":["axios","API_URL","fetchPosts","response","get","data","error","console","fetchPostVotes","postId"],"sources":["/Users/honzik/WebstormProjects/untitled7/client/src/api/api.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:4000/api'; // Adjust if your base URL differs\n\n// Function to fetch all posts\nexport const fetchPosts = async () => {\n    try {\n        const response = await axios.get(`${API_URL}/posts`);\n        return response.data.data; // Accessing the 'data' property from the response\n    } catch (error) {\n        console.error(\"Failed to fetch posts:\", error);\n        throw error; // Rethrow to handle it where the function is called\n    }\n};\n\n// Function to fetch the vote count for a specific post\nexport const fetchPostVotes = async (postId: string) => {\n    try {\n        const response = await axios.get(`${API_URL}/post/${postId}/votes`);\n        return response.data; // Assuming the backend sends the vote count in a straightforward format\n    } catch (error) {\n        console.error(`Failed to fetch votes for post ${postId}:`, error);\n        throw error; // Rethrow to handle it where the function is called\n    }\n};\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B,CAAC,CAAC;;AAE7C;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,GAAEH,OAAQ,QAAO,CAAC;IACpD,OAAOE,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC,CAAC;EAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK,CAAC,CAAC;EACjB;AACJ,CAAC;;AAED;AACA,OAAO,MAAME,cAAc,GAAG,MAAOC,MAAc,IAAK;EACpD,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,GAAEH,OAAQ,SAAQQ,MAAO,QAAO,CAAC;IACnE,OAAON,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAE,kCAAiCG,MAAO,GAAE,EAAEH,KAAK,CAAC;IACjE,MAAMA,KAAK,CAAC,CAAC;EACjB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}