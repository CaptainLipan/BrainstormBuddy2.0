{"ast":null,"code":"var _jsxFileName = \"/Users/honzik/WebstormProjects/untitled7/client/src/components/mainbar/posts/Posts.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchPosts, fetchPostVotes, postComment, getCommentsForPost } from '../../../api/api';\nimport './Posts.css';\nimport ThumbUpOffAltIcon from '@mui/icons-material/ThumbUpOffAlt';\nimport ThumbDownOffAltIcon from '@mui/icons-material/ThumbDownOffAlt';\nimport Button from '../../button/Button';\nimport { ModeComment, Share } from \"@mui/icons-material\";\nimport CommentsSection from \"../comments/CommentsSection\"; // Ensure the correct path\nimport { handleVote } from './handleVote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = ({\n  currentFilter\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const userId = 'YOUR_USER_ID'; // This should be dynamically set based on logged-in user info\n\n  useEffect(() => {\n    const initFetch = async () => {\n      const data = await fetchPosts();\n      const postsWithVotes = await Promise.all(data.map(async post => {\n        const votesCount = await fetchPostVotes(post._id);\n        return {\n          ...post,\n          upvotes: votesCount,\n          upvoted: false,\n          downvoted: false,\n          _comments: [],\n          showComments: false\n        };\n      }));\n      setPosts(postsWithVotes);\n    };\n    initFetch();\n  }, [currentFilter]);\n  const handleCommentIconClick = async postId => {\n    const postIndex = posts.findIndex(post => post._id === postId);\n    if (postIndex === -1) return;\n    const currentPosts = [...posts];\n    const currentPost = currentPosts[postIndex];\n    if (!currentPost.showComments && currentPost._comments.length === 0) {\n      const comments = await getCommentsForPost(postId);\n      currentPost._comments = comments;\n    }\n    currentPost.showComments = !currentPost.showComments;\n    setPosts(currentPosts);\n  };\n  const handleAddComment = async (postId, newCommentText) => {\n    if (!newCommentText.trim()) return;\n    try {\n      const newComment = await postComment(newCommentText, postId, userId);\n      setPosts(posts.map(post => post._id === postId ? {\n        ...post,\n        _comments: [...post._comments, newComment],\n        showComments: true\n      } : post));\n    } catch (error) {\n      console.error('Error posting comment:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-wrapper\",\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(ThumbUpOffAltIcon, {\n          className: `upvote ${post.upvoted ? 'active' : ''}`,\n          onClick: () => handleVote(post._id, userId, posts, setPosts, 'upvote')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: post.upvotes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ThumbDownOffAltIcon, {\n          className: `downvote ${post.downvoted ? 'active' : ''}`,\n          onClick: () => handleVote(post._id, userId, posts, setPosts, 'downvote')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Posted by \", post._creator.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-title-username\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-title-time\",\n          children: new Date(post.createdAt).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          label: \"+ Follow\",\n          className: \"follow-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-body\",\n        children: post.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-area\",\n        children: post.showComments && /*#__PURE__*/_jsxDEV(CommentsSection, {\n          postId: post._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-footer\",\n        children: [/*#__PURE__*/_jsxDEV(ModeComment, {\n          onClick: () => handleCommentIconClick(post._id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [post._comments.length, \" Comments\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Share, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(Posts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","fetchPosts","fetchPostVotes","postComment","getCommentsForPost","ThumbUpOffAltIcon","ThumbDownOffAltIcon","Button","ModeComment","Share","CommentsSection","handleVote","jsxDEV","_jsxDEV","Posts","currentFilter","_s","posts","setPosts","userId","initFetch","data","postsWithVotes","Promise","all","map","post","votesCount","_id","upvotes","upvoted","downvoted","_comments","showComments","handleCommentIconClick","postId","postIndex","findIndex","currentPosts","currentPost","length","comments","handleAddComment","newCommentText","trim","newComment","error","console","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_creator","username","title","Date","createdAt","toLocaleString","label","text","_c","$RefreshReg$"],"sources":["/Users/honzik/WebstormProjects/untitled7/client/src/components/mainbar/posts/Posts.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchPosts, fetchPostVotes, postComment, getCommentsForPost } from '../../../api/api';\nimport './Posts.css';\nimport ThumbUpOffAltIcon from '@mui/icons-material/ThumbUpOffAlt';\nimport ThumbDownOffAltIcon from '@mui/icons-material/ThumbDownOffAlt';\nimport Button from '../../button/Button';\nimport { ModeComment, Share } from \"@mui/icons-material\";\nimport { Post } from '../../../models/post/PostModel';\nimport CommentsSection from \"../comments/CommentsSection\";  // Ensure the correct path\nimport { handleVote } from './handleVote';\n\ninterface PostsProps {\n    currentFilter: string;\n}\n\nconst Posts: React.FC<PostsProps> = ({ currentFilter }) => {\n    const [posts, setPosts] = useState<Post[]>([]);\n    const userId = 'YOUR_USER_ID';  // This should be dynamically set based on logged-in user info\n\n    useEffect(() => {\n        const initFetch = async () => {\n            const data = await fetchPosts();\n            const postsWithVotes = await Promise.all(data.map(async post => {\n                const votesCount = await fetchPostVotes(post._id);\n                return {\n                    ...post,\n                    upvotes: votesCount,\n                    upvoted: false,\n                    downvoted: false,\n                    _comments: [],\n                    showComments: false\n                };\n            }));\n            setPosts(postsWithVotes);\n        };\n\n        initFetch();\n    }, [currentFilter]);\n\n    const handleCommentIconClick = async (postId: string) => {\n        const postIndex = posts.findIndex(post => post._id === postId);\n        if (postIndex === -1) return;\n\n        const currentPosts = [...posts];\n        const currentPost = currentPosts[postIndex];\n        if (!currentPost.showComments && currentPost._comments.length === 0) {\n            const comments = await getCommentsForPost(postId);\n            currentPost._comments = comments;\n        }\n        currentPost.showComments = !currentPost.showComments;\n        setPosts(currentPosts);\n    };\n\n    const handleAddComment = async (postId: string, newCommentText: string) => {\n        if (!newCommentText.trim()) return;\n        try {\n            const newComment = await postComment(newCommentText, postId, userId);\n            setPosts(posts.map(post =>\n                post._id === postId\n                    ? { ...post, _comments: [...post._comments, newComment], showComments: true }\n                    : post\n            ));\n        } catch (error) {\n            console.error('Error posting comment:', error);\n        }\n    };\n\n    return (\n        <div className=\"posts-wrapper\">\n            {posts.map(post => (\n                <div key={post._id} className=\"post\">\n                    <div className=\"post-sidebar\">\n                        <ThumbUpOffAltIcon\n                            className={`upvote ${post.upvoted ? 'active' : ''}`}\n                            onClick={() => handleVote(post._id, userId, posts, setPosts, 'upvote')}\n                        />\n                        <span>{post.upvotes}</span>\n                        <ThumbDownOffAltIcon\n                            className={`downvote ${post.downvoted ? 'active' : ''}`}\n                            onClick={() => handleVote(post._id, userId, posts, setPosts, 'downvote')}\n                        />\n                    </div>\n                    <div className=\"post-title\">\n                        <span>Posted by {post._creator.username}</span>\n                        <div className=\"post-title-username\">{post.title}</div>\n                        <div className=\"post-title-time\">{new Date(post.createdAt).toLocaleString()}</div>\n                        <Button label=\"+ Follow\" className=\"follow-button\" />\n                    </div>\n                    <div className=\"post-body\">{post.text}</div>\n                    <div className=\"comments-area\">\n                        {post.showComments && <CommentsSection postId={post._id} />}\n                    </div>\n                    <div className=\"post-footer\">\n                        <ModeComment onClick={() => handleCommentIconClick(post._id)} />\n                        <span>{post._comments.length} Comments</span>\n                        <Share />\n                        <span>Share</span>\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default Posts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}