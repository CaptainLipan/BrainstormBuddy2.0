{"ast":null,"code":"import { upvotePost, downvotePost, undoVotePost } from '../../../api/api';\nexport const handleVote = async (posts, setPosts, postId, type, userId) => {\n  const postIndex = posts.findIndex(post => post._id === postId);\n  if (postIndex === -1) {\n    console.error(\"Post not found for the given ID:\", postId);\n    return;\n  }\n  const currentPost = posts[postIndex];\n  try {\n    const response = await (type === 'upvote' ? upvotePost : type === 'downvote' ? downvotePost : undoVotePost)({\n      postId: postId,\n      userId: userId\n    });\n    if (response.success) {\n      var _response$netVotes;\n      currentPost.upvotes = (_response$netVotes = response.netVotes) !== null && _response$netVotes !== void 0 ? _response$netVotes : currentPost.upvotes;\n      currentPost.upvoted = type === 'upvote';\n      currentPost.downvoted = type === 'downvote';\n      const updatedPosts = [...posts];\n      updatedPosts[postIndex] = currentPost;\n      setPosts(updatedPosts);\n    } else {\n      console.error(\"API error response:\", response.message);\n    }\n  } catch (error) {\n    console.error(\"Failed to execute vote operation:\", error);\n  }\n};","map":{"version":3,"names":["upvotePost","downvotePost","undoVotePost","handleVote","posts","setPosts","postId","type","userId","postIndex","findIndex","post","_id","console","error","currentPost","response","success","_response$netVotes","upvotes","netVotes","upvoted","downvoted","updatedPosts","message"],"sources":["/Users/honzik/WebstormProjects/untitled7/client/src/components/mainbar/posts/handleVote.ts"],"sourcesContent":["import { Post } from '../../../models/post/PostModel';\nimport { upvotePost, downvotePost, undoVotePost } from '../../../api/api';\n\ntype VoteType = 'upvote' | 'downvote' | 'undo';\n\ninterface VoteResponse {\n    success: boolean;\n    message?: string;\n    netVotes?: number;\n}\n\nexport const handleVote = async (\n    posts: Post[],\n    setPosts: React.Dispatch<React.SetStateAction<Post[]>>,\n    postId: string,\n    type: VoteType,\n    userId: string\n): Promise<void> => {\n    const postIndex = posts.findIndex(post => post._id === postId);\n    if (postIndex === -1) {\n        console.error(\"Post not found for the given ID:\", postId);\n        return;\n    }\n\n    const currentPost = posts[postIndex];\n\n    try {\n        const response = await (type === 'upvote' ? upvotePost : type === 'downvote' ? downvotePost : undoVotePost)({\n            postId: postId,\n            userId: userId\n        });\n\n        if (response.success) {\n            currentPost.upvotes = response.netVotes ?? currentPost.upvotes;\n            currentPost.upvoted = type === 'upvote';\n            currentPost.downvoted = type === 'downvote';\n\n            const updatedPosts = [...posts];\n            updatedPosts[postIndex] = currentPost;\n            setPosts(updatedPosts);\n        } else {\n            console.error(\"API error response:\", response.message);\n        }\n    } catch (error) {\n        console.error(\"Failed to execute vote operation:\", error);\n    }\n};"],"mappings":"AACA,SAASA,UAAU,EAAEC,YAAY,EAAEC,YAAY,QAAQ,kBAAkB;AAUzE,OAAO,MAAMC,UAAU,GAAG,MAAAA,CACtBC,KAAa,EACbC,QAAsD,EACtDC,MAAc,EACdC,IAAc,EACdC,MAAc,KACE;EAChB,MAAMC,SAAS,GAAGL,KAAK,CAACM,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKN,MAAM,CAAC;EAC9D,IAAIG,SAAS,KAAK,CAAC,CAAC,EAAE;IAClBI,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAER,MAAM,CAAC;IACzD;EACJ;EAEA,MAAMS,WAAW,GAAGX,KAAK,CAACK,SAAS,CAAC;EAEpC,IAAI;IACA,MAAMO,QAAQ,GAAG,MAAM,CAACT,IAAI,KAAK,QAAQ,GAAGP,UAAU,GAAGO,IAAI,KAAK,UAAU,GAAGN,YAAY,GAAGC,YAAY,EAAE;MACxGI,MAAM,EAAEA,MAAM;MACdE,MAAM,EAAEA;IACZ,CAAC,CAAC;IAEF,IAAIQ,QAAQ,CAACC,OAAO,EAAE;MAAA,IAAAC,kBAAA;MAClBH,WAAW,CAACI,OAAO,IAAAD,kBAAA,GAAGF,QAAQ,CAACI,QAAQ,cAAAF,kBAAA,cAAAA,kBAAA,GAAIH,WAAW,CAACI,OAAO;MAC9DJ,WAAW,CAACM,OAAO,GAAGd,IAAI,KAAK,QAAQ;MACvCQ,WAAW,CAACO,SAAS,GAAGf,IAAI,KAAK,UAAU;MAE3C,MAAMgB,YAAY,GAAG,CAAC,GAAGnB,KAAK,CAAC;MAC/BmB,YAAY,CAACd,SAAS,CAAC,GAAGM,WAAW;MACrCV,QAAQ,CAACkB,YAAY,CAAC;IAC1B,CAAC,MAAM;MACHV,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEE,QAAQ,CAACQ,OAAO,CAAC;IAC1D;EACJ,CAAC,CAAC,OAAOV,KAAK,EAAE;IACZD,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;EAC7D;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}