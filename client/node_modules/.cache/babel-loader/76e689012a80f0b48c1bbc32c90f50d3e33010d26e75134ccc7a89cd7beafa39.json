{"ast":null,"code":"var _jsxFileName = \"/Users/honzik/WebstormProjects/BrainstormBuddy2.0/client/src/components/mainbar/posts/Posts.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getCommentsForPost, postComment } from '../../../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = ({\n  currentFilter\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [localPost, setLocalPost] = useState(null);\n  const [newCommentText, setNewCommentText] = useState('');\n  const userId = 'user-id'; // Replace with actual user ID\n\n  useEffect(() => {\n    // Fetch posts and set state logic\n  }, [currentFilter]); // Add currentFilter to the dependency array\n\n  const toggleComments = async postId => {\n    const post = posts.find(p => p._id === postId);\n    if (!post) return;\n    if (!post.showComments && post._comments.length === 0) {\n      const comments = await getCommentsForPost(post._id);\n      setLocalPost(prevPost => {\n        if (!prevPost) return null;\n        return {\n          ...prevPost,\n          _comments: comments,\n          showComments: !prevPost.showComments\n        };\n      });\n    } else {\n      setLocalPost(prevPost => {\n        if (!prevPost) return null;\n        return {\n          ...prevPost,\n          showComments: !prevPost.showComments\n        };\n      });\n    }\n  };\n  const handleCommentSubmit = async postId => {\n    if (!localPost || !newCommentText.trim()) return;\n    try {\n      const newComment = await postComment(newCommentText, postId, userId);\n      setLocalPost(prevPost => {\n        if (!prevPost) return null;\n        return {\n          ...prevPost,\n          _comments: [...prevPost._comments, newComment],\n          showComments: true\n        };\n      });\n      setPosts(prevPosts => prevPosts.map(p => p._id === postId ? {\n        ...p,\n        _comments: [...p._comments, newComment]\n      } : p));\n    } catch (error) {\n      console.error('Error posting comment:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleComments(post._id),\n        children: post.showComments ? 'Hide Comments' : 'Show Comments'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), post.showComments && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [post._comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: comment._creator.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 37\n          }, this)]\n        }, comment._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }, this)), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newCommentText,\n          onChange: e => setNewCommentText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCommentSubmit(post._id),\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }, this)]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(Posts, \"Lzvfi6SEG8X2tpAsGdNzNjlUWvM=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","getCommentsForPost","postComment","jsxDEV","_jsxDEV","Posts","currentFilter","_s","posts","setPosts","localPost","setLocalPost","newCommentText","setNewCommentText","userId","toggleComments","postId","post","find","p","_id","showComments","_comments","length","comments","prevPost","handleCommentSubmit","trim","newComment","prevPosts","map","error","console","children","title","fileName","_jsxFileName","lineNumber","columnNumber","text","onClick","comment","_creator","username","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/honzik/WebstormProjects/BrainstormBuddy2.0/client/src/components/mainbar/posts/Posts.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getCommentsForPost, postComment, CommentData } from '../../../api/api';\n\ninterface Post {\n    _id: string;\n    title: string;\n    text: string;\n    link?: string;\n    userId: string;\n    upvotes: number;\n    _comments: CommentData[];\n    _creator: {\n        username: string;\n    };\n    createdAt: string;\n    updatedAt?: string;\n    showComments: boolean;\n    upvoted?: boolean;\n    downvoted?: boolean;\n}\n\ninterface PostsProps {\n    currentFilter: string; // Define the type for the prop\n}\n\nconst Posts: React.FC<PostsProps> = ({ currentFilter }) => {\n    const [posts, setPosts] = useState<Post[]>([]);\n    const [localPost, setLocalPost] = useState<Post | null>(null);\n    const [newCommentText, setNewCommentText] = useState('');\n    const userId = 'user-id'; // Replace with actual user ID\n\n    useEffect(() => {\n        // Fetch posts and set state logic\n    }, [currentFilter]); // Add currentFilter to the dependency array\n\n    const toggleComments = async (postId: string) => {\n        const post = posts.find(p => p._id === postId);\n        if (!post) return;\n\n        if (!post.showComments && post._comments.length === 0) {\n            const comments = await getCommentsForPost(post._id);\n            setLocalPost(prevPost => {\n                if (!prevPost) return null;\n                return { ...prevPost, _comments: comments, showComments: !prevPost.showComments };\n            });\n        } else {\n            setLocalPost(prevPost => {\n                if (!prevPost) return null;\n                return { ...prevPost, showComments: !prevPost.showComments };\n            });\n        }\n    };\n\n    const handleCommentSubmit = async (postId: string) => {\n        if (!localPost || !newCommentText.trim()) return;\n\n        try {\n            const newComment = await postComment(newCommentText, postId, userId);\n            setLocalPost(prevPost => {\n                if (!prevPost) return null;\n                return {\n                    ...prevPost,\n                    _comments: [...prevPost._comments, newComment],\n                    showComments: true,\n                };\n            });\n\n            setPosts(prevPosts => prevPosts.map(p =>\n                p._id === postId ? { ...p, _comments: [...p._comments, newComment] } : p\n            ));\n        } catch (error) {\n            console.error('Error posting comment:', error);\n        }\n    };\n\n    return (\n        <div>\n            {posts.map(post => (\n                <div key={post._id}>\n                    <h2>{post.title}</h2>\n                    <p>{post.text}</p>\n                    <button onClick={() => toggleComments(post._id)}>\n                        {post.showComments ? 'Hide Comments' : 'Show Comments'}\n                    </button>\n                    {post.showComments && (\n                        <div>\n                            {post._comments.map(comment => (\n                                <div key={comment._id}>\n                                    <p>{comment.text}</p>\n                                    <small>{comment._creator.username}</small>\n                                </div>\n                            ))}\n                            <textarea\n                                value={newCommentText}\n                                onChange={(e) => setNewCommentText(e.target.value)}\n                            />\n                            <button onClick={() => handleCommentSubmit(post._id)}>Add Comment</button>\n                        </div>\n                    )}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default Posts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}