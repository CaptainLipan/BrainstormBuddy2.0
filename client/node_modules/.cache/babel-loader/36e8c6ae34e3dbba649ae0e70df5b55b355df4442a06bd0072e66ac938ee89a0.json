{"ast":null,"code":"import { upvotePost, downvotePost, undoVotePost } from '../../../api/api';\nexport const handleVote = async (posts, setPosts, postId, type, userId) => {\n  const postIndex = posts.findIndex(post => post._id === postId);\n  if (postIndex === -1) {\n    console.error(\"Post not found for the given ID:\", postId);\n    return;\n  }\n  let updatedPosts = [...posts];\n  let currentPost = updatedPosts[postIndex];\n\n  // Prepare a default response object in case no API call is made\n  let response = {\n    success: false,\n    message: \"Invalid vote operation\"\n  };\n  try {\n    if (type === 'upvote' && !currentPost.upvoted) {\n      response = await upvotePost({\n        postId,\n        userId\n      });\n    } else if (type === 'downvote' && !currentPost.downvoted) {\n      response = await downvotePost({\n        postId,\n        userId\n      });\n    } else if (type === 'undo') {\n      response = await undoVotePost({\n        postId,\n        userId\n      });\n    }\n    if (response.success) {\n      if (type === 'upvote' && !currentPost.upvoted) {\n        currentPost.upvotes += currentPost.downvoted ? 2 : 1;\n        currentPost.upvoted = true;\n        currentPost.downvoted = false;\n      } else if (type === 'downvote' && !currentPost.downvoted) {\n        currentPost.upvotes -= currentPost.upvoted ? 2 : 1;\n        currentPost.downvoted = true;\n        currentPost.upvoted = false;\n      } else if (type === 'undo') {\n        if (currentPost.upvoted) currentPost.upvotes -= 1;\n        if (currentPost.downvoted) currentPost.upvotes += 1;\n        currentPost.upvoted = false;\n        currentPost.downvoted = false;\n      }\n      updatedPosts[postIndex] = currentPost;\n      setPosts(updatedPosts);\n    } else {\n      console.error(\"API error response:\", response.message);\n    }\n  } catch (error) {\n    console.error(\"Failed to execute vote operation:\", error);\n    // Optionally, handle any rollback or alert user here\n  }\n};","map":{"version":3,"names":["upvotePost","downvotePost","undoVotePost","handleVote","posts","setPosts","postId","type","userId","postIndex","findIndex","post","_id","console","error","updatedPosts","currentPost","response","success","message","upvoted","downvoted","upvotes"],"sources":["/Users/honzik/WebstormProjects/untitled7/client/src/components/mainbar/posts/handleVote.ts"],"sourcesContent":["import React from 'react';\nimport { upvotePost, downvotePost, undoVotePost } from '../../../api/api';\nimport { Post } from '../../../models/post/PostModel';\n\ntype VoteType = 'upvote' | 'downvote' | 'undo';\n\ninterface VoteResponse {\n    success: boolean;\n    message?: string;\n    netVotes?: number;\n}\n\nexport const handleVote = async (\n    posts: Post[],\n    setPosts: React.Dispatch<React.SetStateAction<Post[]>>,\n    postId: string,\n    type: VoteType,\n    userId: string\n): Promise<void> => {\n    const postIndex = posts.findIndex(post => post._id === postId);\n    if (postIndex === -1) {\n        console.error(\"Post not found for the given ID:\", postId);\n        return;\n    }\n\n    let updatedPosts = [...posts];\n    let currentPost = updatedPosts[postIndex];\n\n    // Prepare a default response object in case no API call is made\n    let response: VoteResponse = { success: false, message: \"Invalid vote operation\" };\n\n    try {\n        if (type === 'upvote' && !currentPost.upvoted) {\n            response = await upvotePost({ postId, userId });\n        } else if (type === 'downvote' && !currentPost.downvoted) {\n            response = await downvotePost({ postId, userId });\n        } else if (type === 'undo') {\n            response = await undoVotePost({ postId, userId });\n        }\n\n        if (response.success) {\n            if (type === 'upvote' && !currentPost.upvoted) {\n                currentPost.upvotes += currentPost.downvoted ? 2 : 1;\n                currentPost.upvoted = true;\n                currentPost.downvoted = false;\n            } else if (type === 'downvote' && !currentPost.downvoted) {\n                currentPost.upvotes -= currentPost.upvoted ? 2 : 1;\n                currentPost.downvoted = true;\n                currentPost.upvoted = false;\n            } else if (type === 'undo') {\n                if (currentPost.upvoted) currentPost.upvotes -= 1;\n                if (currentPost.downvoted) currentPost.upvotes += 1;\n                currentPost.upvoted = false;\n                currentPost.downvoted = false;\n            }\n\n            updatedPosts[postIndex] = currentPost;\n            setPosts(updatedPosts);\n        } else {\n            console.error(\"API error response:\", response.message);\n        }\n    } catch (error) {\n        console.error(\"Failed to execute vote operation:\", error);\n        // Optionally, handle any rollback or alert user here\n    }\n};\n"],"mappings":"AACA,SAASA,UAAU,EAAEC,YAAY,EAAEC,YAAY,QAAQ,kBAAkB;AAWzE,OAAO,MAAMC,UAAU,GAAG,MAAAA,CACtBC,KAAa,EACbC,QAAsD,EACtDC,MAAc,EACdC,IAAc,EACdC,MAAc,KACE;EAChB,MAAMC,SAAS,GAAGL,KAAK,CAACM,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKN,MAAM,CAAC;EAC9D,IAAIG,SAAS,KAAK,CAAC,CAAC,EAAE;IAClBI,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAER,MAAM,CAAC;IACzD;EACJ;EAEA,IAAIS,YAAY,GAAG,CAAC,GAAGX,KAAK,CAAC;EAC7B,IAAIY,WAAW,GAAGD,YAAY,CAACN,SAAS,CAAC;;EAEzC;EACA,IAAIQ,QAAsB,GAAG;IAAEC,OAAO,EAAE,KAAK;IAAEC,OAAO,EAAE;EAAyB,CAAC;EAElF,IAAI;IACA,IAAIZ,IAAI,KAAK,QAAQ,IAAI,CAACS,WAAW,CAACI,OAAO,EAAE;MAC3CH,QAAQ,GAAG,MAAMjB,UAAU,CAAC;QAAEM,MAAM;QAAEE;MAAO,CAAC,CAAC;IACnD,CAAC,MAAM,IAAID,IAAI,KAAK,UAAU,IAAI,CAACS,WAAW,CAACK,SAAS,EAAE;MACtDJ,QAAQ,GAAG,MAAMhB,YAAY,CAAC;QAAEK,MAAM;QAAEE;MAAO,CAAC,CAAC;IACrD,CAAC,MAAM,IAAID,IAAI,KAAK,MAAM,EAAE;MACxBU,QAAQ,GAAG,MAAMf,YAAY,CAAC;QAAEI,MAAM;QAAEE;MAAO,CAAC,CAAC;IACrD;IAEA,IAAIS,QAAQ,CAACC,OAAO,EAAE;MAClB,IAAIX,IAAI,KAAK,QAAQ,IAAI,CAACS,WAAW,CAACI,OAAO,EAAE;QAC3CJ,WAAW,CAACM,OAAO,IAAIN,WAAW,CAACK,SAAS,GAAG,CAAC,GAAG,CAAC;QACpDL,WAAW,CAACI,OAAO,GAAG,IAAI;QAC1BJ,WAAW,CAACK,SAAS,GAAG,KAAK;MACjC,CAAC,MAAM,IAAId,IAAI,KAAK,UAAU,IAAI,CAACS,WAAW,CAACK,SAAS,EAAE;QACtDL,WAAW,CAACM,OAAO,IAAIN,WAAW,CAACI,OAAO,GAAG,CAAC,GAAG,CAAC;QAClDJ,WAAW,CAACK,SAAS,GAAG,IAAI;QAC5BL,WAAW,CAACI,OAAO,GAAG,KAAK;MAC/B,CAAC,MAAM,IAAIb,IAAI,KAAK,MAAM,EAAE;QACxB,IAAIS,WAAW,CAACI,OAAO,EAAEJ,WAAW,CAACM,OAAO,IAAI,CAAC;QACjD,IAAIN,WAAW,CAACK,SAAS,EAAEL,WAAW,CAACM,OAAO,IAAI,CAAC;QACnDN,WAAW,CAACI,OAAO,GAAG,KAAK;QAC3BJ,WAAW,CAACK,SAAS,GAAG,KAAK;MACjC;MAEAN,YAAY,CAACN,SAAS,CAAC,GAAGO,WAAW;MACrCX,QAAQ,CAACU,YAAY,CAAC;IAC1B,CAAC,MAAM;MACHF,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEG,QAAQ,CAACE,OAAO,CAAC;IAC1D;EACJ,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZD,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}