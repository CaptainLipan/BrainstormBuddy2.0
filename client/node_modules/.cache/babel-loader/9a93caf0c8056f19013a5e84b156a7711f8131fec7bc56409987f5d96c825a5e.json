{"ast":null,"code":"var _jsxFileName = \"/Users/honzik/WebstormProjects/BrainstormBuddy2.0/client/src/components/mainbar/comments/CommentsSection.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getCommentsForPost } from '../../../api/api';\nimport Comment from './Comment'; // Ensure the correct path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentsSection = ({\n  postId\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const data = await getCommentsForPost(postId);\n        setComments(data);\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchComments();\n  }, [postId]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-section\",\n    children: comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No comments yet. Be the first to comment!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this) : comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n      comment: comment\n    }, comment._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(CommentsSection, \"IqphiJTgr/j/Mbrn10ma5UOJaVw=\");\n_c = CommentsSection;\nexport default CommentsSection;\nvar _c;\n$RefreshReg$(_c, \"CommentsSection\");","map":{"version":3,"names":["React","useState","useEffect","getCommentsForPost","Comment","jsxDEV","_jsxDEV","CommentsSection","postId","_s","comments","setComments","isLoading","setIsLoading","fetchComments","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","comment","_id","_c","$RefreshReg$"],"sources":["/Users/honzik/WebstormProjects/BrainstormBuddy2.0/client/src/components/mainbar/comments/CommentsSection.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getCommentsForPost, CommentData } from '../../../api/api';\nimport Comment from './Comment';  // Ensure the correct path\n\ninterface CommentsSectionProps {\n    postId: string;\n}\n\nconst CommentsSection: React.FC<CommentsSectionProps> = ({ postId }) => {\n    const [comments, setComments] = useState<CommentData[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchComments = async () => {\n            try {\n                const data = await getCommentsForPost(postId);\n                setComments(data);\n            } catch (error) {\n                console.error('Error fetching comments:', error);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchComments();\n    }, [postId]);\n\n    if (isLoading) {\n        return <div>Loading comments...</div>;\n    }\n\n    return (\n        <div className=\"comments-section\">\n            {comments.length === 0 ? (\n                <div>No comments yet. Be the first to comment!</div>\n            ) : (\n                comments.map(comment => (\n                    <Comment key={comment._id} comment={comment} />\n                ))\n            )}\n        </div>\n    );\n};\n\nexport default CommentsSection;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,kBAAkB,QAAqB,kBAAkB;AAClE,OAAOC,OAAO,MAAM,WAAW,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMlC,MAAMC,eAA+C,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACpE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAgB,EAAE,CAAC;EAC3D,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACZ,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,IAAI,GAAG,MAAMZ,kBAAkB,CAACK,MAAM,CAAC;QAC7CG,WAAW,CAACI,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD,CAAC,SAAS;QACNH,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC;IAEDC,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,CAACN,MAAM,CAAC,CAAC;EAEZ,IAAII,SAAS,EAAE;IACX,oBAAON,OAAA;MAAAY,QAAA,EAAK;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACzC;EAEA,oBACIhB,OAAA;IAAKiB,SAAS,EAAC,kBAAkB;IAAAL,QAAA,EAC5BR,QAAQ,CAACc,MAAM,KAAK,CAAC,gBAClBlB,OAAA;MAAAY,QAAA,EAAK;IAAyC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,GAEpDZ,QAAQ,CAACe,GAAG,CAACC,OAAO,iBAChBpB,OAAA,CAACF,OAAO;MAAmBsB,OAAO,EAAEA;IAAQ,GAA9BA,OAAO,CAACC,GAAG;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqB,CACjD;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACb,EAAA,CAlCIF,eAA+C;AAAAqB,EAAA,GAA/CrB,eAA+C;AAoCrD,eAAeA,eAAe;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}