{"ast":null,"code":"var _jsxFileName = \"/Users/honzik/WebstormProjects/untitled7/client/src/components/mainbar/posts/Posts.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchPosts, fetchPostVotes, fetchCommentsCount } from '../../../api/api';\nimport './Posts.css';\nimport ThumbUpOffAltIcon from '@mui/icons-material/ThumbUpOffAlt';\nimport ThumbDownOffAltIcon from '@mui/icons-material/ThumbDownOffAlt';\nimport Button from '../../button/Button';\nimport { ModeComment, Share } from \"@mui/icons-material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [votes, setVotes] = useState({});\n  const [commentsCounts, setCommentsCounts] = useState({});\n  useEffect(() => {\n    const initFetch = async () => {\n      try {\n        const data = await fetchPosts();\n        setPosts(data);\n        for (const post of data) {\n          const netVotes = await fetchPostVotes(post._id);\n          const commentsCount = await fetchCommentsCount(post._id); // Fetching comments count\n\n          setVotes(prevVotes => ({\n            ...prevVotes,\n            [post._id]: netVotes // Updating votes state\n          }));\n          setCommentsCounts(prevCounts => ({\n            ...prevCounts,\n            [post._id]: commentsCount // Updating comments count state\n          }));\n        }\n      } catch (error) {\n        console.error('Error loading posts:', error);\n        setPosts([]);\n      }\n    };\n    initFetch().catch(error => console.error('Failed to initialize fetch:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-wrapper\",\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(ThumbUpOffAltIcon, {\n          className: \"upvote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: votes[post._id] || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ThumbDownOffAltIcon, {\n          className: \"downvote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Posted by \", post._creator.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-title-username\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-title-time\",\n          children: new Date(post.createdAt).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          label: \"+Follow\",\n          className: \"follow-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-body\",\n        children: post.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments footer-action\",\n          children: [/*#__PURE__*/_jsxDEV(ModeComment, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: commentsCounts[post._id] || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"share footer-action\",\n          children: [/*#__PURE__*/_jsxDEV(Share, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Share\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Posts, \"LhQI6eO9MiolpVL6dkyW3Hi5jqk=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","fetchPosts","fetchPostVotes","fetchCommentsCount","ThumbUpOffAltIcon","ThumbDownOffAltIcon","Button","ModeComment","Share","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","votes","setVotes","commentsCounts","setCommentsCounts","initFetch","data","post","netVotes","_id","commentsCount","prevVotes","prevCounts","error","console","catch","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_creator","username","title","Date","createdAt","toLocaleString","label","text","_c","$RefreshReg$"],"sources":["/Users/honzik/WebstormProjects/untitled7/client/src/components/mainbar/posts/Posts.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Post } from '../../../models/post/PostModel';\nimport { fetchPosts, fetchPostVotes, fetchCommentsCount } from '../../../api/api';\nimport './Posts.css';\nimport ThumbUpOffAltIcon from '@mui/icons-material/ThumbUpOffAlt';\nimport ThumbDownOffAltIcon from '@mui/icons-material/ThumbDownOffAlt';\nimport Button from '../../button/Button';\nimport { ModeComment, Share } from \"@mui/icons-material\";\n\nconst Posts: React.FC = () => {\n    const [posts, setPosts] = useState<Post[]>([]);\n    const [votes, setVotes] = useState<{ [key: string]: number }>({});\n    const [commentsCounts, setCommentsCounts] = useState<{ [key: string]: number }>({});\n\n    useEffect(() => {\n        const initFetch = async () => {\n            try {\n                const data = await fetchPosts();\n                setPosts(data);\n\n                for (const post of data) {\n                    const netVotes = await fetchPostVotes(post._id);\n                    const commentsCount = await fetchCommentsCount(post._id);  // Fetching comments count\n\n                    setVotes(prevVotes => ({\n                        ...prevVotes,\n                        [post._id]: netVotes  // Updating votes state\n                    }));\n\n                    setCommentsCounts(prevCounts => ({\n                        ...prevCounts,\n                        [post._id]: commentsCount  // Updating comments count state\n                    }));\n                }\n            } catch (error) {\n                console.error('Error loading posts:', error);\n                setPosts([]);\n            }\n        };\n\n        initFetch().catch(error => console.error('Failed to initialize fetch:', error));\n    }, []);\n\n    return (\n        <div className=\"posts-wrapper\">\n            {posts.map((post: Post) => (\n                <div key={post._id} className=\"post\">\n                    <div className=\"post-sidebar\">\n                        <ThumbUpOffAltIcon className=\"upvote\"/>\n                        <span>{votes[post._id] || 0}</span>\n                        <ThumbDownOffAltIcon className=\"downvote\"/>\n                    </div>\n                    <div className=\"post-title\">\n                        <span>Posted by {post._creator.username}</span>\n                        <div className=\"post-title-username\">{post.title}</div>\n                        <div className=\"post-title-time\">{new Date(post.createdAt).toLocaleString()}</div>\n                        <Button label=\"+Follow\" className=\"follow-button\" />\n                    </div>\n                    <div className=\"post-body\">{post.text}</div>\n                    <div className=\"post-footer\">\n                        <div className=\"comments footer-action\">\n                            <ModeComment />\n                            <span>{commentsCounts[post._id] || 0}</span>  \n                        </div>\n                        <div className=\"share footer-action\">\n                            <Share />\n                            <span>Share</span>\n                        </div>\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default Posts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}