{"ast":null,"code":"import { upvotePost, downvotePost, undoVotePost } from '../../../api/api';\nexport const handleVote = async (posts, setPosts, postId, type) => {\n  // Retrieve user information from localStorage\n  const user = JSON.parse(localStorage.getItem('user'));\n  if (!user || !user._id) {\n    console.error(\"No user logged in or invalid user data\");\n    alert(\"You need to be logged in to vote.\");\n    return;\n  }\n  const userId = user._id; // Make sure the user ID is correctly retrieved\n\n  const postIndex = posts.findIndex(post => post._id === postId);\n  if (postIndex === -1) {\n    console.error(\"Post not found for the given ID:\", postId);\n    return;\n  }\n  let updatedPosts = [...posts];\n  let currentPost = updatedPosts[postIndex];\n  try {\n    const response = await (type === 'upvote' ? upvotePost : type === 'downvote' ? downvotePost : undoVotePost)({\n      postId,\n      userId\n    });\n    if (response.success) {\n      var _response$netVotes;\n      currentPost.upvotes = (_response$netVotes = response.netVotes) !== null && _response$netVotes !== void 0 ? _response$netVotes : currentPost.upvotes;\n      updatedPosts[postIndex] = currentPost;\n      setPosts(updatedPosts);\n    } else {\n      console.error(\"API error response:\", response.message);\n    }\n  } catch (error) {\n    console.error(\"Failed to execute vote operation:\", error);\n  }\n};","map":{"version":3,"names":["upvotePost","downvotePost","undoVotePost","handleVote","posts","setPosts","postId","type","user","JSON","parse","localStorage","getItem","_id","console","error","alert","userId","postIndex","findIndex","post","updatedPosts","currentPost","response","success","_response$netVotes","upvotes","netVotes","message"],"sources":["/Users/honzik/WebstormProjects/untitled7/client/src/components/mainbar/posts/handleVote.ts"],"sourcesContent":["    import { upvotePost, downvotePost, undoVotePost } from '../../../api/api';\n    import { Post } from '../../../models/post/PostModel';\n    import Actions from \"../../navbar/actions/Actions\";\n\n    type VoteType = 'upvote' | 'downvote' | 'undo';\n\n    export const handleVote = async (\n        posts: Post[],\n        setPosts: React.Dispatch<React.SetStateAction<Post[]>>,\n        postId: string,\n        type: VoteType,\n    ): Promise<void> => {\n        // Retrieve user information from localStorage\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (!user || !user._id) {\n            console.error(\"No user logged in or invalid user data\");\n            alert(\"You need to be logged in to vote.\");\n            return;\n        }\n\n        const userId = user._id; // Make sure the user ID is correctly retrieved\n\n        const postIndex = posts.findIndex(post => post._id === postId);\n        if (postIndex === -1) {\n            console.error(\"Post not found for the given ID:\", postId);\n            return;\n        }\n\n        let updatedPosts = [...posts];\n        let currentPost = updatedPosts[postIndex];\n\n        try {\n            const response = await (type === 'upvote' ? upvotePost : type === 'downvote' ? downvotePost : undoVotePost)({\n                postId,\n                userId\n            });\n\n            if (response.success) {\n                currentPost.upvotes = response.netVotes ?? currentPost.upvotes;\n                updatedPosts[postIndex] = currentPost;\n                setPosts(updatedPosts);\n            } else {\n                console.error(\"API error response:\", response.message);\n            }\n        } catch (error) {\n            console.error(\"Failed to execute vote operation:\", error);\n        }\n    };\n"],"mappings":"AAAI,SAASA,UAAU,EAAEC,YAAY,EAAEC,YAAY,QAAQ,kBAAkB;AAMzE,OAAO,MAAMC,UAAU,GAAG,MAAAA,CACtBC,KAAa,EACbC,QAAsD,EACtDC,MAAc,EACdC,IAAc,KACE;EAChB;EACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACrD,IAAI,CAACJ,IAAI,IAAI,CAACA,IAAI,CAACK,GAAG,EAAE;IACpBC,OAAO,CAACC,KAAK,CAAC,wCAAwC,CAAC;IACvDC,KAAK,CAAC,mCAAmC,CAAC;IAC1C;EACJ;EAEA,MAAMC,MAAM,GAAGT,IAAI,CAACK,GAAG,CAAC,CAAC;;EAEzB,MAAMK,SAAS,GAAGd,KAAK,CAACe,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACP,GAAG,KAAKP,MAAM,CAAC;EAC9D,IAAIY,SAAS,KAAK,CAAC,CAAC,EAAE;IAClBJ,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAET,MAAM,CAAC;IACzD;EACJ;EAEA,IAAIe,YAAY,GAAG,CAAC,GAAGjB,KAAK,CAAC;EAC7B,IAAIkB,WAAW,GAAGD,YAAY,CAACH,SAAS,CAAC;EAEzC,IAAI;IACA,MAAMK,QAAQ,GAAG,MAAM,CAAChB,IAAI,KAAK,QAAQ,GAAGP,UAAU,GAAGO,IAAI,KAAK,UAAU,GAAGN,YAAY,GAAGC,YAAY,EAAE;MACxGI,MAAM;MACNW;IACJ,CAAC,CAAC;IAEF,IAAIM,QAAQ,CAACC,OAAO,EAAE;MAAA,IAAAC,kBAAA;MAClBH,WAAW,CAACI,OAAO,IAAAD,kBAAA,GAAGF,QAAQ,CAACI,QAAQ,cAAAF,kBAAA,cAAAA,kBAAA,GAAIH,WAAW,CAACI,OAAO;MAC9DL,YAAY,CAACH,SAAS,CAAC,GAAGI,WAAW;MACrCjB,QAAQ,CAACgB,YAAY,CAAC;IAC1B,CAAC,MAAM;MACHP,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEQ,QAAQ,CAACK,OAAO,CAAC;IAC1D;EACJ,CAAC,CAAC,OAAOb,KAAK,EAAE;IACZD,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;EAC7D;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}