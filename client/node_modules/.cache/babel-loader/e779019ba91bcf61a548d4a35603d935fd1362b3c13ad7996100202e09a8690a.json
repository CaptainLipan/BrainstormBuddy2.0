{"ast":null,"code":"var _jsxFileName = \"/Users/honzik/WebstormProjects/untitled7/client/src/components/mainbar/posts/Posts.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchPosts, fetchPostVotes, postComment, getCommentsForPost } from '../../../api/api';\nimport './Posts.css';\nimport ThumbUpOffAltIcon from '@mui/icons-material/ThumbUpOffAlt';\nimport ThumbDownOffAltIcon from '@mui/icons-material/ThumbDownOffAlt';\nimport Button from '../../button/Button';\nimport { ModeComment, Share } from \"@mui/icons-material\";\nimport CommentsSection from \"../comments/CommentsSection\"; // Ensure the correct path\nimport { handleVote } from './handleVote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = ({\n  currentFilter\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const userId = 'YOUR_USER_ID'; // This should be dynamically set based on logged-in user info\n\n  useEffect(() => {\n    const initFetch = async () => {\n      const data = await fetchPosts();\n      const postsWithVotes = await Promise.all(data.map(async post => {\n        const votesCount = await fetchPostVotes(post._id);\n        return {\n          ...post,\n          upvotes: votesCount,\n          upvoted: false,\n          downvoted: false,\n          _comments: [],\n          showComments: false\n        };\n      }));\n      setPosts(postsWithVotes);\n    };\n    initFetch();\n  }, [currentFilter]);\n  const handleCommentIconClick = async postId => {\n    const postIndex = posts.findIndex(post => post._id === postId);\n    if (postIndex === -1) return;\n    const currentPosts = [...posts];\n    const currentPost = currentPosts[postIndex];\n    if (!currentPost.showComments && currentPost._comments.length === 0) {\n      const comments = await getCommentsForPost(postId);\n      currentPost._comments = comments;\n    }\n    currentPost.showComments = !currentPost.showComments;\n    setPosts(currentPosts);\n  };\n  const handleAddComment = async (postId, newCommentText) => {\n    if (!newCommentText.trim()) return;\n    try {\n      const newComment = await postComment(newCommentText, postId, userId);\n      const updatedPosts = posts.map(post => post._id === postId ? {\n        ...post,\n        _comments: [...post._comments, newComment],\n        showComments: true\n      } : post);\n      setPosts(updatedPosts);\n    } catch (error) {\n      console.error('Error posting comment:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-wrapper\",\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n      post: post,\n      setPosts: setPosts\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(Posts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Posts;\nconst PostItem = ({\n  post,\n  setPosts\n}) => {\n  _s2();\n  const [localPost, setLocalPost] = useState(post);\n  const handleLocalVote = async type => {\n    await handleVote(localPost, setLocalPost, type);\n    setPosts(prevPosts => prevPosts.map(p => p._id === localPost._id ? localPost : p));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(ThumbUpOffAltIcon, {\n        className: `upvote ${localPost.upvoted ? 'active' : ''}`,\n        onClick: () => handleLocalVote('upvote')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: localPost.upvotes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ThumbDownOffAltIcon, {\n        className: `downvote ${localPost.downvoted ? 'active' : ''}`,\n        onClick: () => handleLocalVote('downvote')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Posted by \", localPost._creator.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-title-username\",\n        children: localPost.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-title-time\",\n        children: new Date(localPost.createdAt).toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"+ Follow\",\n        className: \"follow-button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-body\",\n      children: localPost.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-area\",\n      children: localPost.showComments && /*#__PURE__*/_jsxDEV(CommentsSection, {\n        postId: localPost._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-footer\",\n      children: [/*#__PURE__*/_jsxDEV(ModeComment, {\n        onClick: () => handleCommentIconClick(localPost._id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [localPost._comments.length, \" Comments\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Share, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Share\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n_s2(PostItem, \"4gmAhAOuY1Ner7q+HNHnSmDvHR4=\");\n_c2 = PostItem;\nexport default Posts;\nvar _c, _c2;\n$RefreshReg$(_c, \"Posts\");\n$RefreshReg$(_c2, \"PostItem\");","map":{"version":3,"names":["React","useState","useEffect","fetchPosts","fetchPostVotes","postComment","getCommentsForPost","ThumbUpOffAltIcon","ThumbDownOffAltIcon","Button","ModeComment","Share","CommentsSection","handleVote","jsxDEV","_jsxDEV","Posts","currentFilter","_s","posts","setPosts","userId","initFetch","data","postsWithVotes","Promise","all","map","post","votesCount","_id","upvotes","upvoted","downvoted","_comments","showComments","handleCommentIconClick","postId","postIndex","findIndex","currentPosts","currentPost","length","comments","handleAddComment","newCommentText","trim","newComment","updatedPosts","error","console","className","children","PostItem","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s2","localPost","setLocalPost","handleLocalVote","type","prevPosts","p","onClick","_creator","username","title","Date","createdAt","toLocaleString","label","text","_c2","$RefreshReg$"],"sources":["/Users/honzik/WebstormProjects/untitled7/client/src/components/mainbar/posts/Posts.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchPosts, fetchPostVotes, postComment, getCommentsForPost } from '../../../api/api';\nimport './Posts.css';\nimport ThumbUpOffAltIcon from '@mui/icons-material/ThumbUpOffAlt';\nimport ThumbDownOffAltIcon from '@mui/icons-material/ThumbDownOffAlt';\nimport Button from '../../button/Button';\nimport { ModeComment, Share } from \"@mui/icons-material\";\nimport { Post } from '../../../models/post/PostModel';\nimport CommentsSection from \"../comments/CommentsSection\";  // Ensure the correct path\nimport { handleVote } from './handleVote';\n\ninterface PostsProps {\n    currentFilter: string;\n}\n\nconst Posts: React.FC<PostsProps> = ({ currentFilter }) => {\n    const [posts, setPosts] = useState<Post[]>([]);\n    const userId = 'YOUR_USER_ID';  // This should be dynamically set based on logged-in user info\n\n    useEffect(() => {\n        const initFetch = async () => {\n            const data = await fetchPosts();\n            const postsWithVotes = await Promise.all(data.map(async post => {\n                const votesCount = await fetchPostVotes(post._id);\n                return {\n                    ...post,\n                    upvotes: votesCount,\n                    upvoted: false,\n                    downvoted: false,\n                    _comments: [],\n                    showComments: false\n                };\n            }));\n            setPosts(postsWithVotes);\n        };\n\n        initFetch();\n    }, [currentFilter]);\n\n    const handleCommentIconClick = async (postId: string) => {\n        const postIndex = posts.findIndex(post => post._id === postId);\n        if (postIndex === -1) return;\n\n        const currentPosts = [...posts];\n        const currentPost = currentPosts[postIndex];\n        if (!currentPost.showComments && currentPost._comments.length === 0) {\n            const comments = await getCommentsForPost(postId);\n            currentPost._comments = comments;\n        }\n        currentPost.showComments = !currentPost.showComments;\n        setPosts(currentPosts);\n    };\n\n    const handleAddComment = async (postId: string, newCommentText: string) => {\n        if (!newCommentText.trim()) return;\n        try {\n            const newComment = await postComment(newCommentText, postId, userId);\n            const updatedPosts = posts.map(post =>\n                post._id === postId ? { ...post, _comments: [...post._comments, newComment], showComments: true } : post\n            );\n            setPosts(updatedPosts);\n        } catch (error) {\n            console.error('Error posting comment:', error);\n        }\n    };\n\n    return (\n        <div className=\"posts-wrapper\">\n            {posts.map(post => (\n                <PostItem key={post._id} post={post} setPosts={setPosts} />\n            ))}\n        </div>\n    );\n};\n\ninterface PostItemProps {\n    post: Post;\n    setPosts: React.Dispatch<React.SetStateAction<Post[]>>;\n}\n\nconst PostItem: React.FC<PostItemProps> = ({ post, setPosts }) => {\n    const [localPost, setLocalPost] = useState<Post>(post);\n\n    const handleLocalVote = async (type: 'upvote' | 'downvote') => {\n        await handleVote(localPost, setLocalPost, type);\n        setPosts(prevPosts => prevPosts.map(p => p._id === localPost._id ? localPost : p));\n    };\n\n    return (\n        <div className=\"post\">\n            <div className=\"post-sidebar\">\n                <ThumbUpOffAltIcon\n                    className={`upvote ${localPost.upvoted ? 'active' : ''}`}\n                    onClick={() => handleLocalVote('upvote')}\n                />\n                <span>{localPost.upvotes}</span>\n                <ThumbDownOffAltIcon\n                    className={`downvote ${localPost.downvoted ? 'active' : ''}`}\n                    onClick={() => handleLocalVote('downvote')}\n                />\n            </div>\n            <div className=\"post-title\">\n                <span>Posted by {localPost._creator.username}</span>\n                <div className=\"post-title-username\">{localPost.title}</div>\n                <div className=\"post-title-time\">{new Date(localPost.createdAt).toLocaleString()}</div>\n                <Button label=\"+ Follow\" className=\"follow-button\" />\n            </div>\n            <div className=\"post-body\">{localPost.text}</div>\n            <div className=\"comments-area\">\n                {localPost.showComments && <CommentsSection postId={localPost._id} />}\n            </div>\n            <div className=\"post-footer\">\n                <ModeComment onClick={() => handleCommentIconClick(localPost._id)} />\n                <span>{localPost._comments.length} Comments</span>\n                <Share />\n                <span>Share</span>\n            </div>\n        </div>\n    );\n};\n\nexport default Posts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}