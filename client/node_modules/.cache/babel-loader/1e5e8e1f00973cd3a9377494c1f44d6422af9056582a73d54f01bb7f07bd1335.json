{"ast":null,"code":"var _jsxFileName = \"/Users/honzik/WebstormProjects/untitled7/client/src/components/mainbar/posts/Posts.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchPosts, fetchPostVotes, upvotePost, downvotePost, undoVotePost } from '../../../api/api';\nimport './Posts.css';\nimport ThumbUpOffAltIcon from '@mui/icons-material/ThumbUpOffAlt';\nimport ThumbDownOffAltIcon from '@mui/icons-material/ThumbDownOffAlt';\nimport Button from '../../button/Button';\nimport { ModeComment, Share } from \"@mui/icons-material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = ({\n  currentFilter\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const userId = 'YOUR_USER_ID'; // This should be dynamically set based on logged-in user info\n\n  useEffect(() => {\n    const initFetch = async () => {\n      const data = await fetchPosts();\n      const postsWithVotes = await Promise.all(data.map(async post => {\n        const votesCount = await fetchPostVotes(post._id);\n        return {\n          ...post,\n          upvotes: votesCount,\n          upvoted: false,\n          downvoted: false,\n          _comments: []\n        };\n      }));\n      setPosts(postsWithVotes);\n    };\n    initFetch();\n  }, [currentFilter]);\n  const handleVote = async (postId, type) => {\n    const postIndex = posts.findIndex(post => post._id === postId);\n    if (postIndex === -1) return;\n    setPosts(prevPosts => {\n      const updatedPosts = [...prevPosts];\n      const currentPost = updatedPosts[postIndex];\n\n      // Optimistic UI update\n      if (type === 'upvote' && !currentPost.upvoted) {\n        currentPost.upvotes += currentPost.downvoted ? 2 : 1;\n        currentPost.upvoted = true;\n        currentPost.downvoted = false;\n      } else if (type === 'downvote' && !currentPost.downvoted) {\n        currentPost.upvotes -= currentPost.upvoted ? 2 : 1;\n        currentPost.downvoted = true;\n        currentPost.upvoted = false;\n      } else if (type === 'undo') {\n        if (currentPost.upvoted) currentPost.upvotes -= 1;\n        if (currentPost.downvoted) currentPost.upvotes += 1;\n        currentPost.upvoted = false;\n        currentPost.downvoted = false;\n      }\n      return updatedPosts;\n    });\n    try {\n      const response = await (type === 'upvote' ? upvotePost : type === 'downvote' ? downvotePost : undoVotePost)({\n        postId,\n        userId\n      });\n      if (!response.success) {\n        // Revert UI changes if API call fails\n        setPosts(prevPosts => {\n          const updatedPosts = [...prevPosts];\n          updatedPosts[postIndex] = {\n            ...prevPosts[postIndex]\n          }; // Reset vote states\n          return updatedPosts;\n        });\n        throw new Error(response.message || 'Vote operation failed');\n      }\n    } catch (error) {\n      console.error(\"Error during vote:\", error);\n      // Handle error appropriately (e.g., display error message to user)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-wrapper\",\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(ThumbUpOffAltIcon, {\n          className: \"upvote\",\n          onClick: () => handleVote(post._id, post.upvoted ? 'undo' : 'upvote')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: post.upvotes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ThumbDownOffAltIcon, {\n          className: \"downvote\",\n          onClick: () => handleVote(post._id, post.downvoted ? 'undo' : 'downvote')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Posted by \", post._creator.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-title-username\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-title-time\",\n          children: new Date(post.createdAt).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          label: \"+Follow\",\n          className: \"follow-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-body\",\n        children: post.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-footer\",\n        children: [/*#__PURE__*/_jsxDEV(ModeComment, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [post._comments.length, \" Comments\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Share, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(Posts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","fetchPosts","fetchPostVotes","upvotePost","downvotePost","undoVotePost","ThumbUpOffAltIcon","ThumbDownOffAltIcon","Button","ModeComment","Share","jsxDEV","_jsxDEV","Posts","currentFilter","_s","posts","setPosts","userId","initFetch","data","postsWithVotes","Promise","all","map","post","votesCount","_id","upvotes","upvoted","downvoted","_comments","handleVote","postId","type","postIndex","findIndex","prevPosts","updatedPosts","currentPost","response","success","Error","message","error","console","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_creator","username","title","Date","createdAt","toLocaleString","label","text","length","_c","$RefreshReg$"],"sources":["/Users/honzik/WebstormProjects/untitled7/client/src/components/mainbar/posts/Posts.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchPosts, fetchPostVotes, upvotePost, downvotePost, undoVotePost } from '../../../api/api';\nimport './Posts.css';\nimport ThumbUpOffAltIcon from '@mui/icons-material/ThumbUpOffAlt';\nimport ThumbDownOffAltIcon from '@mui/icons-material/ThumbDownOffAlt';\nimport Button from '../../button/Button';\nimport { ModeComment, Share } from \"@mui/icons-material\";\nimport { Post } from '../../../models/post/PostModel';\n\ninterface VoteResponse {\n    success: boolean;\n    message?: string;\n    netVotes?: number;\n}\n\ninterface PostsProps {\n    currentFilter: string;\n}\n\nconst Posts: React.FC<PostsProps> = ({ currentFilter }) => {\n    const [posts, setPosts] = useState<Post[]>([]);\n    const userId = 'YOUR_USER_ID';  // This should be dynamically set based on logged-in user info\n\n    useEffect(() => {\n        const initFetch = async () => {\n            const data = await fetchPosts();\n            const postsWithVotes = await Promise.all(data.map(async post => {\n                const votesCount = await fetchPostVotes(post._id);\n                return {\n                    ...post,\n                    upvotes: votesCount,\n                    upvoted: false,\n                    downvoted: false,\n                    _comments: []\n                };\n            }));\n            setPosts(postsWithVotes);\n        };\n\n        initFetch();\n    }, [currentFilter]);\n\n    const handleVote = async (postId: string, type: 'upvote' | 'downvote' | 'undo') => {\n        const postIndex = posts.findIndex(post => post._id === postId);\n        if (postIndex === -1) return;\n\n        setPosts(prevPosts => {\n            const updatedPosts = [...prevPosts];\n            const currentPost = updatedPosts[postIndex];\n\n            // Optimistic UI update\n            if (type === 'upvote' && !currentPost.upvoted) {\n                currentPost.upvotes += currentPost.downvoted ? 2 : 1;\n                currentPost.upvoted = true;\n                currentPost.downvoted = false;\n            } else if (type === 'downvote' && !currentPost.downvoted) {\n                currentPost.upvotes -= currentPost.upvoted ? 2 : 1;\n                currentPost.downvoted = true;\n                currentPost.upvoted = false;\n            } else if (type === 'undo') {\n                if (currentPost.upvoted) currentPost.upvotes -= 1;\n                if (currentPost.downvoted) currentPost.upvotes += 1;\n                currentPost.upvoted = false;\n                currentPost.downvoted = false;\n            }\n\n            return updatedPosts;\n        });\n\n        try {\n            const response = await (type === 'upvote' ? upvotePost : type === 'downvote' ? downvotePost : undoVotePost)({ postId, userId });\n            if (!response.success) {\n                // Revert UI changes if API call fails\n                setPosts(prevPosts => {\n                    const updatedPosts = [...prevPosts];\n                    updatedPosts[postIndex] = { ...prevPosts[postIndex] }; // Reset vote states\n                    return updatedPosts;\n                });\n                throw new Error(response.message || 'Vote operation failed');\n            }\n        } catch (error) {\n            console.error(\"Error during vote:\", error);\n            // Handle error appropriately (e.g., display error message to user)\n        }\n    };\n\n    return (\n        <div className=\"posts-wrapper\">\n            {posts.map(post => (\n                <div key={post._id} className=\"post\">\n                    <div className=\"post-sidebar\">\n                        <ThumbUpOffAltIcon className=\"upvote\" onClick={() => handleVote(post._id, post.upvoted ? 'undo' : 'upvote')} />\n                        <span>{post.upvotes}</span>\n                        <ThumbDownOffAltIcon className=\"downvote\" onClick={() => handleVote(post._id, post.downvoted ? 'undo' : 'downvote')} />\n                    </div>\n                    <div className=\"post-title\">\n                        <span>Posted by {post._creator.username}</span>\n                        <div className=\"post-title-username\">{post.title}</div>\n                        <div className=\"post-title-time\">{new Date(post.createdAt).toLocaleString()}</div>\n                        <Button label=\"+Follow\" className=\"follow-button\" />\n                    </div>\n                    <div className=\"post-body\">{post.text}</div>\n                    <div className=\"post-footer\">\n                        <ModeComment />\n                        <span>{post._comments.length} Comments</span>\n                        <Share />\n                        <span>Share</span>\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default Posts;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}