{"ast":null,"code":"import { upvotePost, downvotePost, undoVotePost } from '../../../api/api';\nexport const handleVote = async (posts, setPosts, postId, type, userId) => {\n  console.log(\"Voting on:\", postId, \"by user:\", userId, \"Vote type:\", type);\n  if (postIndex === -1) {\n    console.error(\"Post not found for the given ID:\", postId);\n    return;\n  }\n  let updatedPosts = [...posts];\n  let currentPost = updatedPosts[postIndex];\n  try {\n    const response = await (type === 'upvote' ? upvotePost : type === 'downvote' ? downvotePost : undoVotePost)({\n      postId,\n      userId\n    });\n    if (response.success) {\n      var _response$netVotes;\n      currentPost.upvotes = (_response$netVotes = response.netVotes) !== null && _response$netVotes !== void 0 ? _response$netVotes : currentPost.upvotes;\n      currentPost.upvoted = type === 'upvote' && response.netVotes !== undefined;\n      currentPost.downvoted = type === 'downvote' && response.netVotes !== undefined;\n      updatedPosts[postIndex] = currentPost;\n      setPosts(updatedPosts);\n    } else {\n      console.error(\"API error response:\", response.message);\n    }\n  } catch (error) {\n    console.error(\"Failed to execute vote operation:\", error);\n  }\n};","map":{"version":3,"names":["upvotePost","downvotePost","undoVotePost","handleVote","posts","setPosts","postId","type","userId","console","log","postIndex","error","updatedPosts","currentPost","response","success","_response$netVotes","upvotes","netVotes","upvoted","undefined","downvoted","message"],"sources":["/Users/honzik/WebstormProjects/untitled7/client/src/components/mainbar/posts/handleVote.ts"],"sourcesContent":["import { Post } from '../../../models/post/PostModel';\nimport { upvotePost, downvotePost, undoVotePost } from '../../../api/api';\n\ntype VoteType = 'upvote' | 'downvote' | 'undo';\n\nexport const handleVote = async (\n    posts: Post[],\n    setPosts: React.Dispatch<React.SetStateAction<Post[]>>,\n    postId: string,\n    type: VoteType,\n    userId: string\n): Promise<void> => {\n    console.log(\"Voting on:\", postId, \"by user:\", userId, \"Vote type:\", type);\n    if (postIndex === -1) {\n        console.error(\"Post not found for the given ID:\", postId);\n        return;\n    }\n\n    let updatedPosts = [...posts];\n    let currentPost = updatedPosts[postIndex];\n\n    try {\n        const response = await (type === 'upvote' ? upvotePost : type === 'downvote' ? downvotePost : undoVotePost)({\n            postId, userId\n        });\n\n        if (response.success) {\n            currentPost.upvotes = response.netVotes ?? currentPost.upvotes;\n            currentPost.upvoted = type === 'upvote' && response.netVotes !== undefined;\n            currentPost.downvoted = type === 'downvote' && response.netVotes !== undefined;\n            updatedPosts[postIndex] = currentPost;\n            setPosts(updatedPosts);\n        } else {\n            console.error(\"API error response:\", response.message);\n        }\n    } catch (error) {\n        console.error(\"Failed to execute vote operation:\", error);\n    }\n};\n"],"mappings":"AACA,SAASA,UAAU,EAAEC,YAAY,EAAEC,YAAY,QAAQ,kBAAkB;AAIzE,OAAO,MAAMC,UAAU,GAAG,MAAAA,CACtBC,KAAa,EACbC,QAAsD,EACtDC,MAAc,EACdC,IAAc,EACdC,MAAc,KACE;EAChBC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEJ,MAAM,EAAE,UAAU,EAAEE,MAAM,EAAE,YAAY,EAAED,IAAI,CAAC;EACzE,IAAII,SAAS,KAAK,CAAC,CAAC,EAAE;IAClBF,OAAO,CAACG,KAAK,CAAC,kCAAkC,EAAEN,MAAM,CAAC;IACzD;EACJ;EAEA,IAAIO,YAAY,GAAG,CAAC,GAAGT,KAAK,CAAC;EAC7B,IAAIU,WAAW,GAAGD,YAAY,CAACF,SAAS,CAAC;EAEzC,IAAI;IACA,MAAMI,QAAQ,GAAG,MAAM,CAACR,IAAI,KAAK,QAAQ,GAAGP,UAAU,GAAGO,IAAI,KAAK,UAAU,GAAGN,YAAY,GAAGC,YAAY,EAAE;MACxGI,MAAM;MAAEE;IACZ,CAAC,CAAC;IAEF,IAAIO,QAAQ,CAACC,OAAO,EAAE;MAAA,IAAAC,kBAAA;MAClBH,WAAW,CAACI,OAAO,IAAAD,kBAAA,GAAGF,QAAQ,CAACI,QAAQ,cAAAF,kBAAA,cAAAA,kBAAA,GAAIH,WAAW,CAACI,OAAO;MAC9DJ,WAAW,CAACM,OAAO,GAAGb,IAAI,KAAK,QAAQ,IAAIQ,QAAQ,CAACI,QAAQ,KAAKE,SAAS;MAC1EP,WAAW,CAACQ,SAAS,GAAGf,IAAI,KAAK,UAAU,IAAIQ,QAAQ,CAACI,QAAQ,KAAKE,SAAS;MAC9ER,YAAY,CAACF,SAAS,CAAC,GAAGG,WAAW;MACrCT,QAAQ,CAACQ,YAAY,CAAC;IAC1B,CAAC,MAAM;MACHJ,OAAO,CAACG,KAAK,CAAC,qBAAqB,EAAEG,QAAQ,CAACQ,OAAO,CAAC;IAC1D;EACJ,CAAC,CAAC,OAAOX,KAAK,EAAE;IACZH,OAAO,CAACG,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;EAC7D;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}