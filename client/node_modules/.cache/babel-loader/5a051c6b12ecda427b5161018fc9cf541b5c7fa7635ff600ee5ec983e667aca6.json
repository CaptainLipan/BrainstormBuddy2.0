{"ast":null,"code":"var _jsxFileName = \"/Users/honzik/WebstormProjects/BrainstormBuddy2.0/client/src/components/mainbar/posts/Posts.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/components/mainbar/posts/Posts.tsx\nimport React, { useState, useEffect } from 'react';\nimport { fetchPosts, fetchPostVotes, postComment, getCommentsForPost, fetchPostById, fetchCommentsCount, deletePost } from '../../../api/api';\nimport './Posts.css';\nimport ThumbUpOffAltIcon from '@mui/icons-material/ThumbUpOffAlt';\nimport ThumbDownOffAltIcon from '@mui/icons-material/ThumbDownOffAlt';\nimport Button from '../../button/Button';\nimport { ModeComment, Share, Delete } from \"@mui/icons-material\";\nimport CommentsSection from \"../comments/CommentsSection\";\nimport { handleVote } from './handleVote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = ({\n  currentFilter\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const userId = 'YOUR_USER_ID'; // This should be dynamically set based on logged-in user info\n\n  useEffect(() => {\n    const initFetch = async () => {\n      const data = await fetchPosts();\n      const postsWithVotesAndComments = await Promise.all(data.map(async post => {\n        const votesCount = await fetchPostVotes(post._id);\n        const commentsCount = await fetchCommentsCount(post._id);\n        return {\n          ...post,\n          upvotes: votesCount,\n          commentsCount: commentsCount,\n          upvoted: false,\n          downvoted: false,\n          _comments: [],\n          showComments: false\n        };\n      }));\n      setPosts(postsWithVotesAndComments);\n    };\n    initFetch();\n  }, [currentFilter]);\n  const refreshPost = async postId => {\n    try {\n      const updatedPost = await fetchPostById(postId);\n      const commentsCount = await fetchCommentsCount(postId);\n      setPosts(prevPosts => prevPosts.map(p => p._id === postId ? {\n        ...p,\n        ...updatedPost,\n        commentsCount: commentsCount,\n        _comments: updatedPost._comments,\n        upvotes: updatedPost.upvotes,\n        showComments: p.showComments // Retain the current showComments state\n      } : p));\n    } catch (error) {\n      console.error('Error refreshing post:', error);\n    }\n  };\n  const handleDeletePost = async postId => {\n    try {\n      await deletePost(postId);\n      setPosts(prevPosts => prevPosts.filter(p => p._id !== postId));\n    } catch (error) {\n      console.error('Error deleting post:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-wrapper\",\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n      post: post,\n      setPosts: setPosts,\n      userId: userId,\n      refreshPost: refreshPost,\n      handleDeletePost: handleDeletePost\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(Posts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Posts;\nconst PostItem = ({\n  post,\n  setPosts,\n  userId,\n  refreshPost,\n  handleDeletePost\n}) => {\n  _s2();\n  const [localPost, setLocalPost] = useState(post);\n  const handleLocalVote = async type => {\n    await handleVote(localPost, setLocalPost, type);\n    setPosts(prevPosts => prevPosts.map(p => p._id === localPost._id ? localPost : p));\n  };\n  const handleCommentIconClick = async () => {\n    try {\n      if (!localPost.showComments && localPost._comments.length === 0) {\n        const comments = await getCommentsForPost(localPost._id);\n        setLocalPost(prevPost => ({\n          ...prevPost,\n          _comments: comments,\n          showComments: !prevPost.showComments\n        }));\n      } else {\n        setLocalPost(prevPost => ({\n          ...prevPost,\n          showComments: !prevPost.showComments\n        }));\n      }\n    } catch (error) {\n      console.error('Error fetching comments:', error);\n      setLocalPost(prevPost => ({\n        ...prevPost,\n        showComments: !prevPost.showComments\n      }));\n    }\n  };\n  const handleAddComment = async newCommentText => {\n    if (!newCommentText.trim()) return;\n    const commentData = {\n      text: newCommentText,\n      postId: localPost._id,\n      userId\n    };\n    try {\n      await postComment(commentData);\n      refreshPost(localPost._id); // Refresh post data after adding a comment\n    } catch (error) {\n      console.error('Error posting comment:', error);\n    }\n  };\n  const incrementCommentCount = () => {\n    setLocalPost(prevPost => ({\n      ...prevPost,\n      commentsCount: prevPost.commentsCount + 1\n    }));\n    setPosts(prevPosts => prevPosts.map(p => p._id === localPost._id ? {\n      ...p,\n      commentsCount: p.commentsCount + 1\n    } : p));\n  };\n  const decrementCommentCount = () => {\n    setLocalPost(prevPost => ({\n      ...prevPost,\n      commentsCount: prevPost.commentsCount - 1\n    }));\n    setPosts(prevPosts => prevPosts.map(p => p._id === localPost._id ? {\n      ...p,\n      commentsCount: p.commentsCount - 1\n    } : p));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(ThumbUpOffAltIcon, {\n        className: `upvote ${localPost.upvoted ? 'active' : ''}`,\n        onClick: () => handleLocalVote('upvote')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: localPost.upvotes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ThumbDownOffAltIcon, {\n        className: `downvote ${localPost.downvoted ? 'active' : ''}`,\n        onClick: () => handleLocalVote('downvote')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Delete, {\n        className: \"delete-button\",\n        onClick: () => handleDeletePost(localPost._id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Posted by \", localPost._creator.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-title-username\",\n        children: localPost.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-title-time\",\n        children: new Date(localPost.createdAt).toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"+ Follow\",\n        className: \"follow-button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-body\",\n      children: localPost.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-area comments-wrapper\",\n      children: localPost.showComments && /*#__PURE__*/_jsxDEV(CommentsSection, {\n        postId: localPost._id,\n        onCommentAdded: () => refreshPost(localPost._id),\n        incrementCommentCount: incrementCommentCount,\n        decrementCommentCount: decrementCommentCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-footer\",\n      children: [/*#__PURE__*/_jsxDEV(ModeComment, {\n        onClick: handleCommentIconClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [localPost.commentsCount, \" Comments\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Share, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Share\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n};\n_s2(PostItem, \"4gmAhAOuY1Ner7q+HNHnSmDvHR4=\");\n_c2 = PostItem;\nexport default Posts;\nvar _c, _c2;\n$RefreshReg$(_c, \"Posts\");\n$RefreshReg$(_c2, \"PostItem\");","map":{"version":3,"names":["React","useState","useEffect","fetchPosts","fetchPostVotes","postComment","getCommentsForPost","fetchPostById","fetchCommentsCount","deletePost","ThumbUpOffAltIcon","ThumbDownOffAltIcon","Button","ModeComment","Share","Delete","CommentsSection","handleVote","jsxDEV","_jsxDEV","Posts","currentFilter","_s","posts","setPosts","userId","initFetch","data","postsWithVotesAndComments","Promise","all","map","post","votesCount","_id","commentsCount","upvotes","upvoted","downvoted","_comments","showComments","refreshPost","postId","updatedPost","prevPosts","p","error","console","handleDeletePost","filter","className","children","PostItem","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s2","localPost","setLocalPost","handleLocalVote","type","handleCommentIconClick","length","comments","prevPost","handleAddComment","newCommentText","trim","commentData","text","incrementCommentCount","decrementCommentCount","onClick","_creator","username","title","Date","createdAt","toLocaleString","label","onCommentAdded","_c2","$RefreshReg$"],"sources":["/Users/honzik/WebstormProjects/BrainstormBuddy2.0/client/src/components/mainbar/posts/Posts.tsx"],"sourcesContent":["// src/components/mainbar/posts/Posts.tsx\nimport React, { useState, useEffect } from 'react';\nimport { fetchPosts, fetchPostVotes, postComment, getCommentsForPost, fetchPostById, fetchCommentsCount, deletePost } from '../../../api/api';\nimport { CreateCommentInput, CommentData } from '../../../models/comment/CommentModel';\nimport { PostWithCommentsCount } from '../../../models/post/PostModel';\nimport './Posts.css';\nimport ThumbUpOffAltIcon from '@mui/icons-material/ThumbUpOffAlt';\nimport ThumbDownOffAltIcon from '@mui/icons-material/ThumbDownOffAlt';\nimport Button from '../../button/Button';\nimport { ModeComment, Share, Delete } from \"@mui/icons-material\";\nimport CommentsSection from \"../comments/CommentsSection\";\nimport { handleVote } from './handleVote';\n\ninterface PostsProps {\n    currentFilter: string;\n}\n\nconst Posts: React.FC<PostsProps> = ({ currentFilter }) => {\n    const [posts, setPosts] = useState<PostWithCommentsCount[]>([]);\n    const userId = 'YOUR_USER_ID';  // This should be dynamically set based on logged-in user info\n\n    useEffect(() => {\n        const initFetch = async () => {\n            const data = await fetchPosts();\n            const postsWithVotesAndComments = await Promise.all(data.map(async post => {\n                const votesCount = await fetchPostVotes(post._id);\n                const commentsCount = await fetchCommentsCount(post._id);\n                return {\n                    ...post,\n                    upvotes: votesCount,\n                    commentsCount: commentsCount,\n                    upvoted: false,\n                    downvoted: false,\n                    _comments: [],\n                    showComments: false\n                };\n            }));\n            setPosts(postsWithVotesAndComments);\n        };\n\n        initFetch();\n    }, [currentFilter]);\n\n    const refreshPost = async (postId: string) => {\n        try {\n            const updatedPost = await fetchPostById(postId);\n            const commentsCount = await fetchCommentsCount(postId);\n            setPosts(prevPosts => prevPosts.map(p => p._id === postId ? {\n                ...p,\n                ...updatedPost,\n                commentsCount: commentsCount,\n                _comments: updatedPost._comments,\n                upvotes: updatedPost.upvotes,\n                showComments: p.showComments  // Retain the current showComments state\n            } : p));\n        } catch (error) {\n            console.error('Error refreshing post:', error);\n        }\n    };\n\n    const handleDeletePost = async (postId: string) => {\n        try {\n            await deletePost(postId);\n            setPosts(prevPosts => prevPosts.filter(p => p._id !== postId));\n        } catch (error) {\n            console.error('Error deleting post:', error);\n        }\n    };\n\n    return (\n        <div className=\"posts-wrapper\">\n            {posts.map(post => (\n                <PostItem key={post._id} post={post} setPosts={setPosts} userId={userId} refreshPost={refreshPost} handleDeletePost={handleDeletePost} />\n            ))}\n        </div>\n    );\n};\n\ninterface PostItemProps {\n    post: PostWithCommentsCount;\n    setPosts: React.Dispatch<React.SetStateAction<PostWithCommentsCount[]>>;\n    userId: string;\n    refreshPost: (postId: string) => void;\n    handleDeletePost: (postId: string) => void;\n}\n\nconst PostItem: React.FC<PostItemProps> = ({ post, setPosts, userId, refreshPost, handleDeletePost }) => {\n    const [localPost, setLocalPost] = useState<PostWithCommentsCount>(post);\n\n    const handleLocalVote = async (type: 'upvote' | 'downvote') => {\n        await handleVote(localPost, setLocalPost, type);\n        setPosts(prevPosts => prevPosts.map(p => p._id === localPost._id ? localPost : p));\n    };\n\n    const handleCommentIconClick = async () => {\n        try {\n            if (!localPost.showComments && localPost._comments.length === 0) {\n                const comments = await getCommentsForPost(localPost._id);\n                setLocalPost(prevPost => ({ ...prevPost, _comments: comments, showComments: !prevPost.showComments }));\n            } else {\n                setLocalPost(prevPost => ({ ...prevPost, showComments: !prevPost.showComments }));\n            }\n        } catch (error) {\n            console.error('Error fetching comments:', error);\n            setLocalPost(prevPost => ({ ...prevPost, showComments: !prevPost.showComments }));\n        }\n    };\n\n    const handleAddComment = async (newCommentText: string) => {\n        if (!newCommentText.trim()) return;\n        const commentData: CreateCommentInput = {\n            text: newCommentText,\n            postId: localPost._id,\n            userId\n        };\n        try {\n            await postComment(commentData);\n            refreshPost(localPost._id); // Refresh post data after adding a comment\n        } catch (error) {\n            console.error('Error posting comment:', error);\n        }\n    };\n\n    const incrementCommentCount = () => {\n        setLocalPost(prevPost => ({ ...prevPost, commentsCount: prevPost.commentsCount + 1 }));\n        setPosts(prevPosts => prevPosts.map(p => p._id === localPost._id ? { ...p, commentsCount: p.commentsCount + 1 } : p));\n    };\n\n    const decrementCommentCount = () => {\n        setLocalPost(prevPost => ({ ...prevPost, commentsCount: prevPost.commentsCount - 1 }));\n        setPosts(prevPosts => prevPosts.map(p => p._id === localPost._id ? { ...p, commentsCount: p.commentsCount - 1 } : p));\n    };\n\n    return (\n        <div className=\"post\">\n            <div className=\"post-sidebar\">\n                <ThumbUpOffAltIcon\n                    className={`upvote ${localPost.upvoted ? 'active' : ''}`}\n                    onClick={() => handleLocalVote('upvote')}\n                />\n                <span>{localPost.upvotes}</span>\n                <ThumbDownOffAltIcon\n                    className={`downvote ${localPost.downvoted ? 'active' : ''}`}\n                    onClick={() => handleLocalVote('downvote')}\n                />\n                <Delete className=\"delete-button\" onClick={() => handleDeletePost(localPost._id)} />\n            </div>\n            <div className=\"post-title\">\n                <span>Posted by {localPost._creator.username}</span>\n                <div className=\"post-title-username\">{localPost.title}</div>\n                <div className=\"post-title-time\">{new Date(localPost.createdAt).toLocaleString()}</div>\n                <Button label=\"+ Follow\" className=\"follow-button\" />\n            </div>\n            <div className=\"post-body\">{localPost.text}</div>\n            <div className=\"comments-area comments-wrapper\">\n                {localPost.showComments && (\n                    <CommentsSection\n                        postId={localPost._id}\n                        onCommentAdded={() => refreshPost(localPost._id)}\n                        incrementCommentCount={incrementCommentCount}\n                        decrementCommentCount={decrementCommentCount}\n                    />\n                )}\n            </div>\n            <div className=\"post-footer\">\n                <ModeComment onClick={handleCommentIconClick} />\n                <span>{localPost.commentsCount} Comments</span>\n                <Share />\n                <span>Share</span>\n            </div>\n        </div>\n    );\n};\n\nexport default Posts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}